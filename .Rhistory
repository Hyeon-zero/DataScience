group_a
group_b
group_b <-  data.frame(id = c(1, 2, 3, 4, 5),
test = c(70, 83, 65, 95, 80))
group_b
group_all <- bind_rows(group_a , group_b)
group_all
# if-else
a <- 10
if (a < 5)
print(a * 10)
if (a < 5) {
print(a)
} else {
print(a * 10)
}
if (a < 5) {
print(a)
} else {
print(a * 10)
}
if (a < 5) {
print(a)
} else {
print(a * 10)
}
if (a < 5) {
print(a)
} else {
print(a * 10)
print(a / 10)
}
a <- 10
if (a > 5 & b > 5) {
print(a + b)
}
a <- 10
if (a > 5 & b > 5) {
print(a + b)
}
b <- 20
if (a > 5 & b > 5) {
print(a + b)
}
if (a > 5 & b > 5) {
print(a + " " + b)
}
if (a > 5 | > 30) {
if (a > 5 | b > 30) {
print(a * b)
}
if (a > b) {
c <- a
} else {
c <- b
}
print(c)
c <- ifelse(a > b, a, b)
print(c)
weather <- "맑음"
choice <- ifelse(weather == "비", "우산", "모자")
print(choice)
# if-else 반복
score <- 85
if (score > 90) {
grade <- 'A'
} else if (score > 80) {
grade <- 'B'
} else if(score > 70) {
grade <- 'C'
} else if (scroe > 60) {
grade <- 'D'
} else {
grade <- 'F'
}
grade
print(grade)
# for
for (i in 1 : 5) {
print('*')
}
for (i in 6 : 10) {
print('*')
}
print(i)
for (i in 6 : 10) {
print(i)
}
for (i in 1 : 9) {
cat('2 * ', i)
}
cat('2 * ', i, '=')
for (i in 1 : 9) {
cat('2 * ', i, '=')
}
for (i in 1 : 9) {
cat('2 *', i, '=')
}
for (i in 1 : 9) {
cat('2 *', i, '=', 2 * i, '\n')
}
for (i in 2 : 9) {
for (j in 1 : 9) {
cat(i, '*', j, '=', i * j, '\n')
}
}
for (i in i : 20) {
if (i %% 2 == 0) {
cat(i, ' ')
}
}
for (i in 1 : 20) {
if (i %% 2 == 0) {
cat(i, ' ')
}
}
# apply
# apply(데이터셋, 행/열 방향, 적용함수)
iris <- iris
iris
View(iris)
View(iris)
View(iris)
View(mpg)
View(iris)
apply(iris[ , 1 : 4], 1, mean)
apply(iris[ , 1 : 4], 2, mean)
df <- data.frame(sex = c("M", "F", NA, "M", "F",
df
df
score = c(5, 4, 3, 4, NA)
df
score = c(5, 4, 3, 4, NA)
df
df <- data.frame(sex = c("M", "F", NA, "M", "F"),
df
df
df <- data.frame(sex = c("M", "F", NA, "M", "F"),
score = c(5, 4, 3, 4, NA))
df
# 결측지 확인하기
is.na(df)
table(is.na(df))
talbe(is.na(df$sex))
table(is.na(df$sex))
table(is.na(df$score))
mean(df$sex)
mean(df$scroe)
mean(df$score)
# 결측치 제거하기
library(dplyr)
df %>% filter(is.na(score))
df %>% filter(!is.na(score))
df_nomiss <- df %>% filter(!is.na(score))
mean(df_nomiss$score)
sum(df_nomiss$score)
# 여러 변수 동시에 결측치 없는 데이터 추출하기
df_nomiss <- df %>% filter(!is.na(score) & !is.na(sex))
df_nomiss
# 결측치가 하나라도 있으면 제거하기
df_nomiss2 <- na.omit(df)
df_nomiss2
# 함수의 결측치 제외 기능 이용하기
mean(df$score)
mean(df$score, na.rm = T)
sum(df$score, na.rm = T)
exam <- read.csv("csv_exam.csv")
exam
exam[c(3, 8, 15), "math" <- NA]
exam
exam[c(3, 8, 15), "math" <- NA]
exam[c(3, 8, 15), "math"] <- NA
exam
exam %>% summarise(mean_math = mean(math))
exam
exam %>% summarise(mean_math = mean(math))
exam %>% summarise(mean_math = mean(math, na.rm = T))
# 결측치 대체하기
mean(exam$math, na.rm = T)
exam$math <- ifelse(is.na(exam$math), 55, exam$math)
table(is.na(exam$math))
# 이상치 제거하기
outlier <- data.frame(sex c(1, 2, 1, 3, 2, 1),
# 이상치 제거하기
outlier <- data.frame(sex = c(1, 2, 1, 3, 2, 1),
score = c(5, 4, 3, 4, 2, 6))
outlier
table(outlier$sex)
table(outlier$score)
outlier$sex <- ifelse(outlier$sex == 3, NA, outlier$sex)
outlier
outlier$sex
outler
outler
outlier
outlier$score <- ifelse(outlier$score > 5, NA, outlier$score)
outlier$score
outlier
outlier %>%
filter(!is.na(sex) & !is.na(score)) %>%
group_by(sex) %>%
summarise(mean_score = mean(score))
favortie
# 막대 그래프
favortie <- c("Winter", "Summer", "Spring", "Summber", "Summer", "Faill",
"Fail", "Summer", "Spring", "Spring")
favortie
table(favortie)
# 막대 그래프
favortie <- c("Winter", "Summer", "Spring", "Summer", "Summer", "Faill",
"Fail", "Summer", "Spring", "Spring")
favortie
favortie
# 막대 그래프
favortie <- c("Winter", "Summer", "Spring", "Summer", "Summer", "Faill", "Fail", "Summer", "Spring", "Spring")
favortie
table(favortie)
# 막대 그래프
favortie <- c("Winter", "Summer", "Spring", "Summer", "Summer", "Fail", "Fail", "Summer", "Spring", "Spring")
favortie
table(favortie)
ds <- table(favortie)
df
df
ds
barplot(ds, main = "favorite season")
barplot(ds, main = "favorite season",
col = 'blue', row = 'red')
barplot(ds, main = "favorite season",
col = 'blue')
barplot(ds, main = "favorite season",
col = '#343252')
barplot(ds, main = "favorite season",
col = c("blue", "red", "green", "yellow"))
barplot(ds, main = "favorite season",
col = rainbow(4))
barplot(ds, main = "favorite season",
col = rainbow(4))
barplot(ds, main = "favorite season",
col = "green",
xlab = "계절",
ylab = "빈도수")
barplot(ds, main = "favorite season",
col = "green",
xlab = "계절",
ylab = "빈도수")
barplot(ds, main = "favorite season",
col = "green",
xlab = "계절",
ylab = "빈도수")
barplot(ds, main = "favorite season",
col = "green",
xlab = "계절",
horiz = TRUE)
barplot(ds, main = "favorite season",
col = "green",
xlab = "계절",
ylab = "빈도수")
# 막대 그래프
favortie <- c("Winter", "Summer", "Spring", "Summer", "Summer", "Fall", "Fall", "Summer", "Spring", "Spring")
favortie
barplot(ds, main = "favorite season",
col = "green",
xlab = "계절",
names = c("FA", "SP", "SU", "WI"))
barplot(ds, main = "favortie season",
col = "green",
las = 2)
# 히스토그램
head(cars)
dist <- cars[ , 2]
head(dist)
hist(dist,
main = "Histogram for dist",
xlab = "제동거리",
ylab = "빈도수",
border = "blue",
col = "green",
las = 2,
breaks = 5)
dist
hist(dist,
main = "Histogram for dist",
xlab = "제동거리",
ylab = "빈도수",
border = "blue",
col = "green",
las = 2,
breaks = 5)
pie(ds, main = "선호하는 계절", radius = 1)
pie(ds, main = "선호하는 계절",
col = c("brown", "green", "red", "black"),
radius = 1)
# 막대 그래프
favortie <- c("Winter", "Summer", "Spring", "Summer", "Summer", "Fall", "Fall", "Summer", "Spring", "Spring")
favortie
table(favortie)
pie(ds, main = "선호하는 계절",
col = c("brown", "green", "red", "black"),
radius = 1)
ds <- table(favortie)
pie(ds, main = "선호하는 계절",
col = c("brown", "green", "red", "black"),
radius = 1)
# 선그래프
month = 1 : 12
late = c(5, 8, 7, 9)
late = c(5, 8, 7, 9, 4, 6, 12 ,13, 8, 6, 6, 4)
late = c(5, 8, 7, 9, 4, 6, 12, 13, 8, 6, 6, 4)
plot(month,
late,
main = "지각생 통계",
type = "l",
lty = 1,
lwd = 1,
xlab = "Month",
ylab = "late")
plot(month,
late,
main = "지각생 통계",
type = "b",
lty = 1,
lwd = 1,
xlab = "Month",
ylab = "late")
plot(month,
late,
main = "지각생 통계",
type = "s",
lty = 1,
lwd = 1,
xlab = "Month",
ylab = "late")
l
plot(month,
late,
main = "지각생 통계",
type = "l",
lty = 1,
lwd = 1,
xlab = "Month",
ylab = "late")
# ggplot2 패키지
install.packages("ggplot2")
library(ggplot2)
# 산점도
ggplot(data = mpg)
ggplot(data = mpg, aes(x = displ, y = hwy))
ggplot(data = mpg, aes(x = display, y = hwy))
ggplot(data = mpg, aes(x = displ, y = hwy))
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point()
ggplot(data = mpg, aes(x = diply, y = hwy)) +
geom_point() +
xlim(3, 6)
ggplot(data = mpg, aes(x = dipl, y = hwy)) +
geom_point() +
xlim(3, 6)
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
xlim(3, 6)
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
xlim(3, 6) +
ylim(10, 30)
# 막대 그래프
library(dplyr)
df_mpg <- mpg %>%
group_by(drv) %>%
summarise(mean_hwy = mean(hwy))
df_mpg
ggplot(data = df_mpg, aes(x = drv, y = mean_hwy)) +
geom_col()
ggplot(data = df_mpg, aes(x = reorder(drv, -mean_hwy), y = mean_hwy)) +
geom_col()
+ geom_bar()
ggplot(data = df_mpg, aes(x = reorder(drv, -mean_hwy), y = mean_hwy)) +
geom_col()
ggplot(data = df_mpg, aes(x = drv, y = mean_hwy)) +
geom_col()
ggplot(data = mpg, aes(x = drv)) + geom_bar()
ggplot(data = mpg, aes(x = hwy)) + geom_bar()
# 선그래프
head(economics)
ggplot(data = economics, aes(x = data, y = unemploy))
ggplot(data = economics, aes(x = data, y = unemploy)) +
geom_line()
ggplot(data = economics, aes(x = data, y = unemploy)) +
geom_line()
# 선그래프
head(economics)
ggplot(data = economics, aes(x = date, y = unemploy)) +
geom_line()
# 상자 그림
ggplot(data = mpg, aes(x = drv, y = hwy)) +
geom_boxplot()
data <- read.csv("descriptive.csv", header = TRUE)
data
head(data)
dim(data)
str(data)
summary(data)
# 명목척도
summary(data$gender)
table(data$gender)
data <- subset(data, gender == 1 | gender == 2)
x <- table(data$gender)
x
barplot(x)
# 서열척도
summary(data$level)
table(data$level)
x1 <- table(data$level)
x1
barplot(x1)
# 등간척도
survey <- data$survey
survey
summary(survey)
x2 <- table(data$survey)
x2
hist(survey)
pie(x2)
# 비율척도
summary(data$cost)
plot(data$cost)
data <- subset(data, data$cost)
data <- subset(data, data$cost >= 2 & data$cost <= 10)
data
x3 <- table(data$cost)
x3
mean(x3)
data <- subset(data, data$cost >= 2 & data$cost <= 10)
x3 <- data$cost
x3
mean(x3)
medium(x3)
median(x3)
sort(x3)
sort(x3, decreasing = T)
quantile(x3, 1/4)
quantile(x3, 2/4)
quantile(x3, 3/4)
quantile(x3, 4/4)
data <- read.csv("descriptive.csv", header = TRUE)
data <- read.csv("descriptive.csv", header = T)
# 표를 만드는 방법
head(data)
result <- table(data)
result <- table(data$level)
result
prop.table(result)
prop.table(result) * 100
table(data$level, data$pass)
data$level2 <- factor(data$level, label = c("고졸", "데졸", "대학원졸"))
table(data$level2)
table(data$level2, data$pass)
data$pass2 <- ifelse(data$pass == 1, "실패", "합격")
table(data$level2, data$pass2)
result2 <- table(data$level2, data$pass2)
result2
addmargins(result2)
result3 <- xtabs(~level2 + pass2, data = data)
reulst3
reuslt3
result3
plot(result3)
prop.table(result3)
prop.table(result3) * 100
addmargins(prop.table(result3))
# 교차분석
data <- read.csv("cleanDescriptive.csv", header = T)
# 교차분석
data <- read.csv("cleanDescriptive.csv", header = T)
View(data)
# 교차분석
data <- read.csv("cleanDescriptive.csv", header = T, encoding = "UTF-8")
# 교차분석
data <- read.csv("cleanDescriptive.csv", header = T, fileEncoding = "CP949", encoding = "UTF-8")
data
View(data)
View(data)
head(data)
x <- data$level2
y <- data$pass2
result <- data.frame(Level = x, Pass = y)
dim(result)
table(result)
install.packages("gmodels")
library(gmodels)
CrossTable(x, y)
CrossTable(x, y chisq = TRUE)
CrossTable(x, y, chisq = TRUE)
ggplot(data = mpg, aes(x = displ, y = hwy))
# 배기량(displ)과 고속도로 연비(hwy)의 관계를 산점도로 나타낸다.
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point()
# ggplot2 패키지
install.packages("ggplot2")
library(ggplot2)
ggplot(data = mpg, aes(x = displ, y = hwy))
# 배기량(displ)과 고속도로 연비(hwy)의 관계를 산점도로 나타낸다.
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy))
sort(x3, decreasing = T)
quantile(x3, 1/4)
quantile(x3, 2/4)
quantile(x3, 3/4)
quantile(x3, 4/4)
# 선그래프
head(economics)
